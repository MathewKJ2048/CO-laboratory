Basic work division
1) compiler
2) processor
3) GUI
4) testing
5) documentation of code and features

compiler:
1) incorporate all real instructions (lw lh asciiz etc in data section)
2) make syntax MIPS-like ( allow , and optional immediates)
3) pseudo-instructions (inc,dec,inci,deci)
4) comipler directives (origin of PC, origin of data, jump to main:, rename register)
5) handle syntax errors properly (catch exceptions, point to line number)
6) syscalls
7) foreign language plugins

processor:
1) pipelining
2) data forwarding
3) stalls and IPC

GUI:
1) display memory
2) display registers
3) display code
4) step-wise execution
5) switching base (binary, hexadecimal, decimal, octal)*(signed, unsigned) (ASCII)
6) pipelining/data forwarding enable/disable

testing:
1) all commands (previously untested instructions, data section instructions)
2) IPC
3) stalls
4) pipelining

documentation:
1) README.md
2) list of pseudo-instructions
3) syntax variations from MIPS
4) how to write plugins
